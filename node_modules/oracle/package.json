{
  "name": "oracle",
  "description": "Oracle database driver",
  "keywords": [
    "database",
    "db",
    "oracle"
  ],
  "homepage": "https://github.com/nearinfinity/node-oracle",
  "version": "0.3.1",
  "engines": {
    "node": ">=0.6.0"
  },
  "maintainers": [
    {
      "name": "Joe Ferner",
      "email": "joe@fernsroth.com"
    }
  ],
  "bugs": {
    "url": "https://github.com/nearinfinity/node-oracle/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nearinfinity/node-oracle.git"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~>0.8.0"
  },
  "scripts": {
    "test": "nodeunit test/integration.js test/outparams.js",
    "install": "node-gyp rebuild"
  },
  "main": "./index.js",
  "gypfile": true,
  "readme": "# Install\n * Install the Oracle Instant Client:\n  * Download the [Instant Client Package](http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html): both \"Basic Lite\" and \"SDK\".\n  * Extract both the Basic Lite and the SDK zip files to `/opt/instantclient/` (Linux/OS X) or `C:\\oracle\\instantclient\\` (Windows)\n   * or put them wherever you want and set the environment variables `OCI_INCLUDE_DIR` (to the sdk/include) and `OCI_LIB_DIR` (to the directory containing libocci.so.11.1 on Linux/OS X, or oraocci11.lib on Windows).\n  * Linux: add the shared object files to the ld cache:\n \n  \t```bash\n\t# Replace /opt/instantclient/ with wherever you extracted the Basic Lite files to\n\techo '/opt/instantclient/' | sudo tee -a /etc/ld.so.conf.d/moo.conf\n\tsudo ldconfig\n\t```\n\t* Create the symbolic links:\n\t\n\t```bash\n\t\tcd /opt/instantclient/\n\t\tsudo ln -s libclntsh.so.11.1 libclntsh.so \n\t\tsudo ln -s libocci.so.11.1 libocci.so \n\t```\n * Finally install using Node Package Manager (npm):\n\n    `npm install oracle`\n\n# Example\n\n```javascript\nvar oracle = require(\"oracle\");\n\noracle.connect({ \"hostname\": \"localhost\", \"user\": \"test\", \"password\": \"test\" }, function(err, connection) {\n  // selecting rows\n  connection.execute(\"SELECT * FROM person WHERE name = :1\", ['bob smith'], function(err, results) {\n    // results will be an array of objects\n  });\n\n  // inserting with return value\n  connection.execute(\n    \"INSERT INTO person (name) VALUES (:1) RETURNING id INTO :2\",\n    ['joe ferner', new oracle.OutParam()],\n    function(err, results) {\n      // results.updateCount = 1\n      // results.returnParam = the id of the person just inserted\n    });\n\n  connection.setAutoCommit(true);\n\n  connection.commit(function(err) {\n    // transaction committed\n  });\n\n  connection.rollback(function(err) {\n    // transaction rolledback\n  });\n\n  connection.close(); // call this when you are done with the connection\n});\n```\n\n## Out Params\n\nThe following Out Params are supported in Stored Procedures:\n\n```\n\nOCCIINT\nOCCISTRING\nOCCIDOUBLE\nOCCIFLOAT\nOCCICURSOR\nOCCICLOB\nOCCIDATE\nOCCITIMESTAMP\nOCCINUMBER\nOCCIBLOB\n\n```\n\nAnd can be used as follows:\n\n```\n\nconnection.execute(\"call myProc(:1,:2)\", [\"nodejs\", new oracle.OutParam(oracle.OCCISTRING)], function(err, results){\n  console.dir(results);\n};\n\n```\n\nWhen using Strings as Out Params, the size can be optionally specified as follows:\n\n```\n\nconnection.execute(\"call myProc(:1,:2)\", [\"nodejs\", new oracle.OutParam(oracle.OCCISTRING, {size: 1000})], function(err, results){\n\n```\n\nIf no size is specified, a default size of 200 chars is used.\n\nSee tests for more examples.\n\n## In/Out Params\n\nThe following INOUT param types are supported:\n\n```\n\nOCCIINT\nOCCISTRING\nOCCIDOUBLE\nOCCIFLOAT\nOCCINUMBER\n\n```\n\nINOUT params are used like normal OUT prams, with the optional 'in' paramater value being passed in the options object:\n\n```\n\nconnection.execute(\"call myProc(:1)\", [new oracle.OutParam(oracle.OCCIINT, {in: 42})], function(err, results){\n  console.dir(results);\n};\n\n```\n\n\n# Develop\n\n## Install Oracle/Oracle Express\n\n * Download [Oracle Express 10g](http://www.oracle.com/technetwork/database/express-edition/database10gxe-459378.html)\n * Download [Instant Client](http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html)\n  * Instant Client Package - Basic Lite\n  * Instant Client Package - SQL*Plus\n  * Instant Client Package - SDK\n * Install Oracle Express (Ubuntu)\n\n```bash\nsudo dpkg -i oracle-xe_11.2.0.3.0-1.0_i386.deb\nsudo apt-get install alien\nsudo alien oracle-instantclient11.2-*\nsudo dpkg -i oracle-instantclient11.2-*.deb\nsudo /etc/init.d/oracle-xe configure\n```\n\n * Open http://localhost:9999/apex/ change 9999 to the port you configured. Log-in with \"sys\" and the password.\n * Create a user called \"test\" with password \"test\" and give all accesses.\n\n```bash\nsudo vi /etc/ld.so.conf.d/oracle.conf -- add this line /usr/lib/oracle/11.2/client/lib/\nsudo ldconfig\n\nexport ORACLE_SID=test\nexport ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/11.2/server\nexport OCI_INCLUDE_DIR=/usr/include/oracle/11.2/client/\nexport OCI_LIB_DIR=/usr/lib/oracle/11.2/client/lib/\nsqlplus test@XE\n```\n\n## Build\n\n```bash\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "oracle@0.3.1",
  "_from": "oracle@"
}
